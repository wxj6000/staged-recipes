# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 16 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "pyscf-dispersion" %}
{% set version = "1.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/pyscf/dispersion/archive/refs/tags/v1.2.0.tar.gz
  
build:
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
    - make
  host:
    - python
    - pip
    - openblas
  run:
    - python
    - openblas
test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - pyscf.dispersion
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/pyscf/dispersion
  summary: 'PySCF extensions for dispersion calculations'
  description: |
    pyscf-dispersion is a collection of dftd3 and dftd4 with Python Wrapper

  license: Apache-2.0
  license_family: Apache

extra:
  recipe-maintainers:
    - wxj6000
